scalar AllType


type Query {
  reset:DbConfig
  dados:DbConfig
  consultarTitulos(key: String!): Titulos  
  perfil(email: String): Perfil
}

type Mutation {
  atualizarDb(key: String!, item: String!, value: AllType): Titulos
  logar(user: String!, email: String!, senha: String!): Perfil
}

type Titulos {
  borderVisible: Boolean
  border: String
  bg: String
  texto: String
  textVisible: Boolean
  colorText: String
  colorIco: String
  icone: String
  iconeVisible: Boolean
}

type Perfil {
  user: String
  email: String
  token: AllType
}

input Login {
  email: String!
  senha: String!
}

type DbConfig {
  home: TituloConfig
  contato: TituloConfig
  sobre: TituloConfig
  login: LoginConfig
  whatsapp: WhatsappConfig
  obs: ObservacaoConfig
  menu: MenuConfig
  logo: LogoConfig
  header: HeaderConfig
  padrao: Boolean
}

type TituloConfig {
  borderVisible: Boolean
  border: String
  bg: String
  texto: String
  textVisible: Boolean
  colorText: String
  colorIco: String
  icone: String
  iconeVisible: Boolean
}

type LoginConfig {
  borderVisible: Boolean
  border: String
  bg: String
  texto: String
  textVisible: Boolean
  colorText: String
  colorIco: String
  icone: String
  iconeVisible: Boolean
  dev: String
  emailDev: String
  devS: String
  devHash: String
  admin: String
  emailAdmin: String
  adminS: String
  adminHash: String
  use: String
  emailUse: String
  useS: String
  useHash: String
}

type WhatsappConfig {
  icone: String
  numero: String
  visible: Boolean
  colorIcone: String
}

type ObservacaoConfig {
  colorObs: String
  visible: Boolean
  observacao: String
}

type MenuConfig {
  colorIcone: String
  menuVisible: Boolean
}

type LogoConfig {
  logoVisible: Boolean
  logotipo: String
  altLogo: String
  lagLogo: String
}

type HeaderConfig {
  transparente: Boolean
  color: String
  imageHeader: Boolean
}

